{"version":3,"file":"key-industries-block/index.js","mappings":"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","sources":["webpack://custom-blocks/./src/key-industries-block/edit.js","webpack://custom-blocks/./src/key-industries-block/index.js","webpack://custom-blocks/./src/key-industries-block/save.js","webpack://custom-blocks/./src/key-industries-block/editor.scss","webpack://custom-blocks/./src/key-industries-block/style.scss","webpack://custom-blocks/external window \"React\"","webpack://custom-blocks/external window [\"wp\",\"blockEditor\"]","webpack://custom-blocks/external window [\"wp\",\"blocks\"]","webpack://custom-blocks/external window [\"wp\",\"components\"]","webpack://custom-blocks/external window [\"wp\",\"i18n\"]","webpack://custom-blocks/webpack/bootstrap","webpack://custom-blocks/webpack/runtime/chunk loaded","webpack://custom-blocks/webpack/runtime/compat get default export","webpack://custom-blocks/webpack/runtime/define property getters","webpack://custom-blocks/webpack/runtime/hasOwnProperty shorthand","webpack://custom-blocks/webpack/runtime/make namespace object","webpack://custom-blocks/webpack/runtime/jsonp chunk loading","webpack://custom-blocks/webpack/before-startup","webpack://custom-blocks/webpack/startup","webpack://custom-blocks/webpack/after-startup"],"sourcesContent":["/**\n * Retrieves the translation of text.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/packages/packages-i18n/\n */\nimport { __ } from '@wordpress/i18n';\n\n/**\n * React hook that is used to mark the block wrapper element.\n * It provides all the necessary props like the class name.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/packages/packages-block-editor/#useblockprops\n */\nimport { RichText, useBlockProps, BlockIcon, MediaUpload, PlainText, InspectorControls } from '@wordpress/block-editor';\n\n/**\n * Lets webpack process CSS, SASS or SCSS files referenced in JavaScript files.\n * Those files can contain any CSS code that gets applied to the editor.\n *\n * @see https://www.npmjs.com/package/@wordpress/scripts#using-css\n */\nimport './editor.scss';\n\n/**\n * The edit function describes the structure of your block in the context of the\n * editor. This represents what the editor will render when the block is used.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-edit-save/#edit\n *\n * @return {Element} Element to render.\n */\n\nimport { Button, Placeholder, PanelBody, TextControl } from '@wordpress/components';\n\nexport default function Edit({ attributes, setAttributes }) {\n\tconst { imageSrc, imageAlt, industryHeadline, industryDescription } = attributes\n\treturn (\n\t\t<div {...useBlockProps({ className: 'industry-block' })}>\n\t\t\t{!imageSrc ? <Placeholder\n\t\t\t\ticon={<BlockIcon icon=\"format-image\" />}\n\t\t\t\tlabel={__('Image block', 'key-industries-block')}>\n\t\t\t\t<MediaUpload\n\t\t\t\t\tonSelect={(media) => setAttributes({ imageSrc: media.url, imageAlt: media.alt })}\n\t\t\t\t\ttype=\"image\"\n\t\t\t\t\trender={({ open }) => (\n\t\t\t\t\t\t<Button onClick={open} variant='secondary' isLarge>\n\t\t\t\t\t\t\t{__('Select Image', 'banner-block')}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t)}\n\t\t\t\t/>\n\t\t\t</Placeholder> :\n\t\t\t\t<img src={imageSrc} alt={imageAlt} />}\n\t\t\t<PlainText placeholder={__('Enter headline...', 'key-industries-block')}\n\t\t\t\tvalue={industryHeadline}\n\t\t\t\tclassName='industry-headline'\n\t\t\t\tonChange={(val) => setAttributes({ industryHeadline: val })}></PlainText>\n\t\t\t<PlainText\n\t\t\t\tplaceholder={__('Enter description...', 'key-industries-block')}\n\t\t\t\tvalue={industryDescription}\n\t\t\t\tclassName='industry-description'\n\t\t\t\tonChange={(val) => setAttributes({ industryDescription: val })}></PlainText>\n\t\t\t<InspectorControls>\n\t\t\t\t<PanelBody title={__('Image Settings', 'key-industries-block')}>\n\t\t\t\t\t<MediaUpload\n\t\t\t\t\t\tonSelect={(media) => setAttributes({ imageSrc: media.url })}\n\t\t\t\t\t\ttype=\"image\"\n\t\t\t\t\t\trender={({ open }) => (\n\t\t\t\t\t\t\t<Button onClick={open} variant='secondary' isLarge>\n\t\t\t\t\t\t\t\t{__('Select Image', 'key-industries-block')}\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t</PanelBody>\n\t\t\t\t<PanelBody title={__('Text Settings', 'key-industries-block')}>\n\t\t\t\t\t<TextControl\n\t\t\t\t\t\tlabel={__('Industry headline text', 'key-industries-block')}\n\t\t\t\t\t\tvalue={industryHeadline}\n\t\t\t\t\t\tonChange={(value) => setAttributes({ industryHeadline: value })}\n\t\t\t\t\t/>\n\t\t\t\t\t<TextControl\n\t\t\t\t\t\tlabel={__('Industry description text', 'key-industries-block')}\n\t\t\t\t\t\tvalue={industryDescription}\n\t\t\t\t\t\tonChange={(value) => setAttributes({ industryDescription: value })}\n\t\t\t\t\t/>\n\t\t\t\t</PanelBody>\n\t\t\t</InspectorControls>\n\t\t</div>\n\t);\n}\n","/**\n * Registers a new block provided a unique name and an object defining its behavior.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-registration/\n */\nimport { registerBlockType } from '@wordpress/blocks';\n\n/**\n * Lets webpack process CSS, SASS or SCSS files referenced in JavaScript files.\n * All files containing `style` keyword are bundled together. The code used\n * gets applied both to the front of your site and to the editor.\n *\n * @see https://www.npmjs.com/package/@wordpress/scripts#using-css\n */\nimport './style.scss';\n\n/**\n * Internal dependencies\n */\nimport Edit from './edit';\nimport save from './save';\nimport metadata from './block.json';\n\n/**\n * Every block starts by registering a new block type definition.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-registration/\n */\nregisterBlockType( metadata.name, {\n\t/**\n\t * @see ./edit.js\n\t */\n\tedit: Edit,\n\n\t/**\n\t * @see ./save.js\n\t */\n\tsave,\n} );\n","/**\n * React hook that is used to mark the block wrapper element.\n * It provides all the necessary props like the class name.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/packages/packages-block-editor/#useblockprops\n */\nimport { useBlockProps } from '@wordpress/block-editor';\n\n/**\n * The save function defines the way in which the different attributes should\n * be combined into the final markup, which is then serialized by the block\n * editor into `post_content`.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-edit-save/#save\n *\n * @return {Element} Element to render.\n */\nexport default function save({ attributes }) {\n\tconst { imageSrc, imageAlt, industryHeadline, industryDescription } = attributes\n\treturn (\n\t\t<div { ...useBlockProps.save({ className: 'industry-block'}) }>\n\t\t\t<img src={imageSrc} alt={imageAlt} />\n\t\t\t<h3 className='industry-headline'>{ industryHeadline }</h3>\n\t\t\t<p className='industry-description'>{ industryDescription }</p>\n\t\t</div>\n\t);\n}\n","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"i18n\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"key-industries-block/index\": 0,\n\t\"key-industries-block/style-index\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = globalThis[\"webpackChunkcustom_blocks\"] = globalThis[\"webpackChunkcustom_blocks\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"key-industries-block/style-index\"], () => (__webpack_require__(\"./src/key-industries-block/index.js\")))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":["__","RichText","useBlockProps","BlockIcon","MediaUpload","PlainText","InspectorControls","Button","Placeholder","PanelBody","TextControl","Edit","attributes","setAttributes","imageSrc","imageAlt","industryHeadline","industryDescription","createElement","className","icon","label","onSelect","media","url","alt","type","render","open","onClick","variant","isLarge","src","placeholder","value","onChange","val","title","registerBlockType","save","metadata","name","edit"],"sourceRoot":""}